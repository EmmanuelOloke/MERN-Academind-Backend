{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.e1419262.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = (val) => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    for (const validator of validators) {\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n            isValid = isValid && value.trim().length > 0;\n        }\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n            isValid = isValid && value.trim().length >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n            isValid = isValid && value.trim().length <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MIN) {\n            isValid = isValid && +value >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAX) {\n            isValid = isValid && +value <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n        }\n    }\n    return isValid;\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  }); // useReducer is used to manage complex/multiple states that performs some functionalities and not just updating the state of a component. It takes a second argument which is the initial state\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]); // Second argument in useEffect is an array of dependencies i.e an array of things that will trigger this useEfect function when they change, in this case, props and inputState\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3} // 3 is a fallback value incase the rows is not defined\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}> {props.label} </label> {element}{' '}\n      {!inputState.isValid && inputState.isTouched && (\n        <p> {props.errorText} </p>\n      )}{' '}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  // Reducer function\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          // Check if any of the state input is undefined, if there is any just skip and continue with the other iterations\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  // useReducer is used to manage complex/multiple states that performs some functionalities and not just updating the state of a component. It takes a second argument which is the initial state.\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []); //useCallback is a React hook used to wrap a function after defining the dependencies under which it should run. Specifying no dependencies means that if the component rerenders the function will be stored away by React and reusec so that no new function object is created everytime the component function rerenders.\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState(); // We use useState to manage the file states because we'll need to update the DOM after choosing a file, so we can later preview what has been chosen\n  const [previewUrl, setPreviewUrl] = useState(); // The URL of the image preview we wanna generate so we can show the preview to the user\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef(); // We're using useRef here to store value that survive rerender cycle and extablishes a connection to a DOM element\n\n  useEffect(() => {\n    // We use useEffect to do something upon a state change. This function will execute whenever a file changes.\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader(); // One we know we have a file, then we can generate an image preview URL, with the browser built-in API/Class FileReader(), it helps use read and parse files\n    fileReader.onload = () => {\n      // We execute this function whenever the file reader is done loading/parsing/reading a file\n      setPreviewUrl(fileReader.result); // We don't get the parsed file as an argument, instead we have to extract it from fileReader.result. That's just how the API works\n    };\n    fileReader.readAsDataURL(file); // Command to create a URL we can output. It converts the file/binary data into a readable or outputable URL that we can now use\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    // The event.target object has a files property that holds the file that has been chosen. This is a default JS method\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click(); // This method exists on this DOM node and it will open up the file picker, thereby allowing us to utilize the input element without seeing it because we initially set the display to none\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: { value: '', isValid: false },\n          image: {\n            // Managing the initial image state\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  // Async function because we will work with a promise, and send a http request instead of just doing console.log(). For that we use the fetch() API.\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        ); // Making use of the functions in the http-hook.js file to manage backend connection and request sending\n        auth.login(responseData.userId, responseData.token); // We only want to call auth.login() if we didn't have an error, hence why we do it here in the try block\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData(); // We use formData, which is a format already build into JS for handling both text and none-text files e.g images and files\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData // We now send formData instead of JSON.stringify.\n        ); // The fecth() API, which is provided by browsers in modern JS and used to send HTTP Requests. It takes a string that points at out Backend code\n\n        auth.login(responseData.userId, responseData.token); // We only want to call auth.login() if we didn't have an error, hence why we do it here in the try block\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2> Login Required </h2> <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              id=\"name\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Enter your name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name\"\n              onInput={inputHandler}\n            />\n          )}\n          {/* Only show the image upload button when we are in signup mode*/}\n          {!isLoginMode && (\n            <ImageUpload\n              id=\"image\"\n              center\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"email\"\n            label=\"E-mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(8)]}\n            errorText=\"Please enter a valid password with minimum of 8 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}